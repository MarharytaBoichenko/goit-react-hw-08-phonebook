{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","App.module.css","redux/operations.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","redux/selectors.js","components/ContactList/ContactList.js","redux/actions.js","components/Filter/Filter.js","components/Heading/Heading.js","components/Container/Container.js","components/Navigation/Navigation.js","redux/auth/auth-selectors.js","components/MainNav/MainNav.js","redux/auth/auth-operations.js","components/UserMenu/userMenu.js","views/Header/Header.js","views/Contacts/Contacts.js","views/Login/Login.js","views/Register/Register.js","views/Home/Home.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","redux/contacts-reducer.js","redux/filter-reducer.js","redux/auth/auth-reducers.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","response","data","console","log","addContacts","name","number","rejectWithValue","contact","post","replaceContacts","id","patch","deleteContacts","delete","ContactForm","useState","setName","setNumber","contacts","useSelector","state","dispatch","useDispatch","reset","onSubmit","e","preventDefault","nameInContact","toLowerCase","trim","isInContact","find","cont","idInContacts","filter","map","window","confirm","className","s","form","inputLabel","label","onChange","target","value","type","nameInput","required","pattern","title","button","ContactItem","contactItem","contactName","contactNumber","onClick","deleteContact","getVisibleContacts","createSelector","normalizedFilter","toString","includes","ContactList","useEffect","visibleContacts","list","item","changeFilter","createAction","Filter","filterInput","Heading","text","Container","children","container","Navigation","to","getName","user","getIsLoggedIn","isLoggedIn","getRefreshing","isRefreshing","MainNav","token","set","headers","common","unset","register","credentials","logIn","logOut","error","fetchCurrentUser","_","thunkAPI","getState","persistedToken","operations","UserMenu","Header","Contacts","Login","email","setEmail","password","setPassword","placeholder","Register","Home","PrivateRoute","redirectTo","PublicRoute","restricted","App","refreshing","path","element","contactReducer","createReducer","fulfilled","action","payload","filterReducer","rejected","pending","userReducer","actions","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.fc7873ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\",\"nameInput\":\"ContactForm_nameInput__1yxA2\",\"inputLabel\":\"ContactForm_inputLabel__3ilUb\",\"label\":\"ContactForm_label__378f8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__5eHQm\",\"contactName\":\"ContactItem_contactName__3Zp2H\",\"contactNumber\":\"ContactItem_contactNumber__Lf19i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"inputLabel\":\"Filter_inputLabel__KDsXr\",\"filterInput\":\"Filter_filterInput__u16Kg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n// https://connections-api.herokuapp.com/users/signup\n\n// axios.defaults.baseURL = 'https://61b7b24c64e4a10017d18c66.mockapi.io';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContactsStatus',\n  async () => {\n    // const response = await axios.get(\"/contacts\");\n    // return response.data;\n    try {\n      const response = await axios.get('/contacts');\n      return response.data;\n    } catch (err) {\n      console.log(err);\n      //   return rejectWithValue(err.response.data);\n    }\n  },\n);\n\nexport const addContacts = createAsyncThunk(\n  'contacts/addContactsStatus',\n  async ({ name, number }, { rejectWithValue }) => {\n    const contact = { name, number };\n    try {\n      const response = await axios.post('/contacts', contact);\n      return response.data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  },\n);\n\nexport const replaceContacts = createAsyncThunk(\n  'contacts/replaceContactsStatus',\n  async ({ id, name, number }, { rejectWithValue }) => {\n    const contact = { name: name, number: number };\n    try {\n      const response = await axios.patch(`/contacts/${id}`, contact);\n      console.log(response);\n      return response.data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  },\n);\n\nexport const deleteContacts = createAsyncThunk(\n  'contacts/deleteContactsStatus',\n  async (id, { rejectWithValue }) => {\n    try {\n      ///axios не возвращает ничего  при удалении  delete\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (err) {\n      console.log(err.response.data);\n      return rejectWithValue(err.response.data);\n    }\n  },\n);\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContacts, replaceContacts } from '../../redux/operations';\n\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(state => {\n    return state.contacts;\n  });\n  const dispatch = useDispatch();\n\n  const nameHandler = e => {\n    setName(e.target.value);\n  };\n  const numberHandler = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    const nameInContact = name.toLowerCase().trim();\n    const isInContact = contacts.find(\n      cont => cont.name.toLowerCase().trim() === nameInContact,\n    );\n\n    ////наверно  костыли))\n\n    const idInContacts = contacts\n      .filter(cont => cont.name.toLowerCase().trim() === nameInContact)\n      .map(cont => cont.id);\n    console.log(idInContacts[0]);\n    const id = idInContacts[0];\n\n    if (isInContact) {\n      const needToReplace = window.confirm(\n        `${name} is already in contact,  do  you want to  replace ?`,\n      );\n      if (needToReplace) {\n        console.log('patch');\n        dispatch(replaceContacts({ id, name, number }));\n        reset();\n      }\n      return;\n    }\n    console.log('add');\n    dispatch(addContacts({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleOnSubmit} className={s.form}>\n      <label className={s.inputLabel}>\n        <span className={s.label}> Name</span>\n        <input\n          onChange={nameHandler}\n          type=\"name\"\n          // name=\"name\"\n          value={name}\n          className={s.nameInput}\n          required\n        ></input>\n      </label>\n      <label className={s.inputLabel}>\n        <span className={s.label}> Number</span>\n        <input\n          type=\"tel\"\n          // name=\"number\"\n          value={number}\n          onChange={numberHandler}\n          className={s.nameInput}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport { ContactForm };\n","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContacts } from \"../../redux/operations\";\nimport s from \"./ContactItem.module.css\";\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const deleteContact = (id) => {\n    dispatch(deleteContacts(id));\n  };\n\n  return (\n    <div className={s.contactItem}>\n      <p className={s.contactName}> {`${name}:`}</p>{\" \"}\n      <p className={s.contactNumber}> {number}</p>\n      <button\n        type=\"button\"\n        className={s.button}\n        onClick={() => {\n          deleteContact(id);\n        }}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\nexport { ContactItem };\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts;\n\nexport const getFilter = state => state.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    // const filter = getFilter(state);\n    // const contacts = getContacts(state);\n    const normalizedFilter = filter.toLowerCase();\n    // console.log(contacts);\n    if (!contacts) {\n      return;\n    }\n    return contacts.filter(contact =>\n      contact.name.toString().toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleContacts } from '../../redux/selectors';\nimport { fetchContacts } from '../../redux/operations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const visibleContacts = useSelector(getVisibleContacts);\n\n  return (\n    <ul className={s.list}>\n      {visibleContacts.map(({ id, name, number }) => {\n        return (\n          <li key={id} className={s.item}>\n            <ContactItem name={name} number={number} id={id} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteContact: PropTypes.func,\n};\nexport { ContactList };\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\nexport const addContactsError = createAction(\"contacts/addContactsError\");\n\nexport const deleteContactsSuccess = createAction(\n  \"contacts/deleteContactsSuccess\"\n);\nexport const deleteContactsRequest = createAction(\n  \"contacts/deleteContactsRequest\"\n);\nexport const deleteContactsError = createAction(\"contacts/deleteContactsError\");\n\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const changeFilter = createAction(\"filter/change\");\n","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/actions\";\nimport s from \"./Filter.module.css\";\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const filterHandler = (e) => {\n    console.log(e.target.value);\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <>\n      <label className={s.inputLabel}>\n        <span className={s.label}>Find contacts by name</span>\n        <input\n          onChange={filterHandler}\n          type=\"text\"\n          name=\"filter\"\n          // value={value}\n          className={s.filterInput}\n        ></input>\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport { Filter };\n","export const Heading = ({ text }) => {\n  return <h2>{text}</h2>;\n};\n","import s from \"./Container.module.css\";\nimport PropTypes from \"prop-types\";\nexport const Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n","import { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => {\n  return (\n    <>\n      <NavLink\n        to=\"/register\"\n        // className={({ isActive }) => (isActive ? s.activeLink : s.link)}\n      >\n        Register\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        // className={({ isActive }) => (isActive ? s.activeLink : s.link)}\n      >\n        Login\n      </NavLink>\n    </>\n  );\n};\n","const getName = state => state.user.user.name;\n\nconst getIsLoggedIn = state => state.user.isLoggedIn;\nconst getToken = state => state.token;\nconst getRefreshing = state => state.user.isRefreshing;\n\nexport { getName, getIsLoggedIn, getToken, getRefreshing };\n","import { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\nimport { NavLink } from 'react-router-dom';\n\nexport const MainNav = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <>\n      <NavLink\n        to=\"/\"\n        // className={({ isActive }) => (isActive ? s.activeLink : s.link)}\n      >\n        Home\n      </NavLink>\n      {isLoggedIn && (\n        <NavLink\n          to=\"/contacts\"\n          // className={({ isActive }) => (isActive ? s.activeLink : s.link)}\n        >\n          Contacts\n        </NavLink>\n      )}\n    </>\n  );\n};\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\n///чтобы не  передаваnmd каждом запросе заголовок с токеном создаем объект токена\n//сетит  токен на хедеры\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common['Authorization'] = '';\n  },\n};\n\nconst register = createAsyncThunk('user/register', async credentials => {\n  try {\n    const response = await axios.post('/users/signup', credentials);\n    console.log(response.data.token);\n\n    token.set(response.data.token);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n    //   return rejectWithValue(err.response.data);\n    /////  как  обрабатывать ошибки ????\n  }\n});\n\nconst logIn = createAsyncThunk('user/logIn', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    console.log(token);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    //обрабатывать ошибку\n  }\n});\n\nconst logOut = createAsyncThunk('user/logOut', async () => {\n  try {\n    axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    //обрабатывать ошибку\n  }\n});\n\n//// надо доставать токен  через  getState  из  локал  сторидж\n\nconst fetchCurrentUser = createAsyncThunk(\n  'user/fetchCurrentUser',\n  async (_, thunkAPI) => {\n    //получаем весь state\n    const state = thunkAPI.getState();\n    //из  него  токен, который сохранял персист  (если он есть)\n    const persistedToken = state.user.token;\n    // console.log(persistedToken);\n    //если токена нет  сохраненного то пользователя  нет , даем ошибку\n    if (persistedToken === null) {\n      console.log('Токена нет, уходим из fetchCurrentUser');\n      return thunkAPI.rejectWithValue();\n\n      //если оставить просто returт то он  возвращает undefined  и оно идет в payload и потом все падает\n\n      ///не совсем понятно (((\n    }\n    //   если  он есть в локал стор, то  сетим токен в заголовок  и отправляем запрос за данными юзера\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      //обрабатывать ошибку\n    }\n  },\n);\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getName } from '../../redux/auth/auth-selectors';\nimport operations from '../../redux/auth/auth-operations';\n\nexport const UserMenu = () => {\n  const name = useSelector(getName);\n  const dispatch = useDispatch();\n\n  const logOutHandler = () => {\n    dispatch(operations.logOut());\n  };\n  return (\n    <section>\n      <p>Welcome, {name}</p>\n      <button type=\"button\" onClick={logOutHandler}>\n        LogOut\n      </button>\n    </section>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { Navigation } from '../../components/Navigation/Navigation';\nimport { MainNav } from '../../components/MainNav/MainNav';\nimport { UserMenu } from '../../components/UserMenu/userMenu';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\n\nexport const Header = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <header>\n      <MainNav />\n      {/* <UserMenu /> */}\n      {/* {!isLoggedIn && <Navigation />} */}\n      {isLoggedIn ? <UserMenu /> : <Navigation />}\n    </header>\n  );\n};\n","import { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { Heading } from '../../components/Heading/Heading';\nimport { Container } from '../../components/Container/Container';\n// import { UserMenu } from '../../components/User Menu/userMenu';\nimport { Header } from '../Header/Header';\n\nexport const Contacts = () => {\n  return (\n    <>\n      <Container>\n        <Header />\n        <Heading text=\"Phonebook\" />\n        <ContactForm />\n        <Heading text=\"Contacts\" />\n        <Filter />\n        <ContactList />\n      </Container>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport operations from '../../redux/auth/auth-operations';\nimport { Header } from '../Header/Header';\n\nexport const Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const onEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const onPasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  const onLoginSubmit = e => {\n    e.preventDefault();\n    console.log({ email, password });\n    dispatch(operations.logIn({ email, password }));\n    ///dispatch    email and password  to  LogIn  operation\n    reset();\n  };\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <Header />\n      <form onSubmit={onLoginSubmit}>\n        <label>\n          <input\n            type=\"email\"\n            value={email}\n            placeholder=\"Enter  your email\"\n            onChange={onEmailChange}\n          ></input>\n        </label>\n        <label>\n          <input\n            type=\"text\"\n            value={password}\n            placeholder=\"Enter  your password\"\n            onChange={onPasswordChange}\n          ></input>\n        </label>\n        <button type=\"submit\">LogIn</button>\n        <button type=\"submit\">Login with Google</button>\n      </form>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport operations from '../../redux/auth/auth-operations';\nimport { Header } from '../Header/Header';\n\nexport const Register = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const onNameChange = e => {\n    setName(e.target.value);\n  };\n  const onEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const onPasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  const onRegisterHandler = e => {\n    e.preventDefault();\n    console.log({ name, email, password });\n    // const credentials = { name, email, password };\n    // dispatch(operations.register(credentials));\n    dispatch(operations.register({ name, email, password }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <Header />\n      <form onSubmit={onRegisterHandler}>\n        <label>\n          <input\n            type=\"name\"\n            value={name}\n            placeholder=\"Enter  your name\"\n            onChange={onNameChange}\n          ></input>\n        </label>\n        <label>\n          <input\n            type=\"email\"\n            value={email}\n            placeholder=\"Enter  your email\"\n            onChange={onEmailChange}\n          ></input>\n        </label>\n        <label>\n          <input\n            type=\"text\"\n            value={password}\n            placeholder=\"Enter  your password\"\n            onChange={onPasswordChange}\n            // pattern=\"/^[a-z0-9]+/\"\n            title=\"Пароль должен состоять из цифр и латинских букв верхнего и нижнего регистра\"\n          ></input>\n        </label>\n        <button type=\"submit\">Register</button>\n        <button type=\"submit\">Login with Google</button>\n      </form>\n    </>\n  );\n};\n","import { Header } from '../Header/Header';\n\nexport const Home = () => {\n  return (\n    <>\n      <Header />\n      <main>\n        <h2>Hello, I`m your phonebook</h2>\n      </main>\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\n\nconst PrivateRoute = ({ children, redirectTo = '/' }) => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return isLoggedIn ? children : <Navigate to={redirectTo} />;\n};\n\nexport default PrivateRoute;\n\n////вопрос   -  если  не использовать проп redirectTo  а прямо  в приватном компоненте\n//прописать  '/contacts'   по при рефреше  заржается на  старница контактов а   home ^ почему???/\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\n\nconst PublicRoute = ({ children, restricted = false, redirectTo = '/' }) => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const redirect = isLoggedIn && restricted;\n  return redirect ? <Navigate to={redirectTo} /> : children;\n};\n\nexport default PublicRoute;\n","import './App.module.css';\nimport { Routes, Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n//сделать  lazy  загрузку\nimport { Contacts } from './views/Contacts/Contacts';\nimport { Login } from './views/Login/Login';\nimport { Register } from './views/Register/Register';\nimport { Home } from './views/Home/Home';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport PublicRoute from './components/PublicRoute/PublicRoute';\nimport operations from './redux/auth/auth-operations';\nimport { getRefreshing } from './redux/auth/auth-selectors';\n// import Counter from \"./Counter/counter\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const refreshing = useSelector(getRefreshing);\n  console.log(refreshing);\n\n  ////при загрузке  приложения  запрашиваем  текущего пользователя\n  useEffect(() => {\n    dispatch(operations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    // <div>Hello world1</div>\n    ///для  предотвращения  мигания страниц при перезагрузке страницы  -  пока загрузка  не рендерится,  когд получены данные польз  тогда рендер\n\n    !refreshing && (\n      <Routes>\n        {/* <Route index element={<HomePage />} /> */}\n        <Route\n          path=\"/\"\n          element={\n            <PublicRoute>\n              <Home />\n            </PublicRoute>\n          }\n        />\n        <Route\n          path=\"register\"\n          element={\n            <PublicRoute restricted>\n              <Register />\n            </PublicRoute>\n          }\n        />\n\n        <Route\n          path=\"login\"\n          element={\n            <PublicRoute restricted redirectTo=\"/contacts\">\n              <Login />\n            </PublicRoute>\n          }\n        />\n\n        <Route\n          path=\"contacts\"\n          element={\n            <PrivateRoute redirectTo=\"/login\">\n              <Contacts />\n            </PrivateRoute>\n          }\n        />\n      </Routes>\n    )\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContacts,\n  addContacts,\n  deleteContacts,\n  replaceContacts,\n} from './operations';\n\nexport const contactReducer = createReducer([], {\n  [fetchContacts.fulfilled]: (state, action) => {\n    return action.payload;\n  },\n  [addContacts.fulfilled]: (state, action) => {\n    return [...state, action.payload];\n  },\n\n  [deleteContacts.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n\n  [replaceContacts.fulfilled]: (state, action) => {\n    return [...state].map(contact => {\n      console.log(action.payload);\n      if (contact.id === action.payload.id) {\n        return action.payload;\n      }\n      return contact;\n    });\n  },\n  //   console.log(action.payload);\n  //   console.log(state);\n  //   return action.payload;\n  // },\n});\n\nexport const ErrorReducer = createReducer(null, {\n  [addContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.pending]: () => null,\n  [deleteContacts.rejected]: (_, action) => action.payload,\n  [replaceContacts.rejected]: (state, action) => action.payload,\n});\n\nexport const loadingReducer = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContacts.pending]: () => true,\n  [addContacts.fulfilled]: () => false,\n  [addContacts.rejected]: () => false,\n  [deleteContacts.pending]: () => true,\n  [deleteContacts.fulfilled]: () => false,\n  [deleteContacts.rejected]: () => false,\n  [replaceContacts.pending]: () => true,\n  [replaceContacts.rejected]: () => false,\n  [replaceContacts.fulfilled]: () => false,\n});\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./actions\";\n\nexport const filterReducer = createReducer(\"\", {\n  [changeFilter]: (state, action) => {\n    // console.log(state);\n    console.log(action);\n    console.log(action.payload);\n    return action.payload;\n  },\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport operations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isRefreshing: false,\n};\n\nexport const userReducer = createReducer(initialState, {\n  [operations.register.fulfilled]: (state, action) => {\n    console.log(action.payload);\n    /////state  это  1  пользователь\n    state.user = action.payload.user;\n    state.token = action.payload.token;\n    state.isLoggedIn = true;\n  },\n  [operations.logIn.fulfilled]: (state, action) => {\n    console.log(action.payload);\n    state.user = action.payload.user;\n    state.token = action.payload.token;\n    state.isLoggedIn = true;\n  },\n  [operations.logOut.fulfilled]: (state, action) => {\n    console.log(action.payload);\n    state.user = { name: null, email: null };\n    state.token = null;\n    state.isLoggedIn = false;\n\n    //delete token  and  clear  state\n  },\n  [operations.fetchCurrentUser.pending]: (state, actions) => {\n    state.isRefreshing = true;\n  },\n  [operations.fetchCurrentUser.fulfilled]: (state, actions) => {\n    console.log(actions.payload);\n    state.user = actions.payload;\n    state.isLoggedIn = true;\n    state.isRefreshing = false;\n  },\n  [operations.fetchCurrentUser.rejected]: (state, action) => {\n    state.isRefreshing = false;\n  },\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactReducer } from './contacts-reducer';\nimport { filterReducer } from './filter-reducer';\nimport { userReducer } from './auth/auth-reducers';\n// console.log(userReducer);\n\nconst middleware = getDefaultMiddleware =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }).concat(logger);\n\n//для  сохранения токена  в  local  storage  чтобы  данные текущего польз  можно\n//было взять при перезагрузке страницы\n\n///это то что будем  сохранять\nconst authPersistConfig = {\n  key: 'authtoken',\n  storage,\n  whitelist: ['token'],\n};\n// const persistedUserRed = persistReducer(authPersistConfig, userReducer);\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n    filter: filterReducer,\n    user: persistReducer(authPersistConfig, userReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line\nexport default { store, persistor };\n// export default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}