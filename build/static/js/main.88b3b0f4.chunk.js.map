{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/actions.js","redux/operations.js","App.module.css","components/Loader/Loading.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","redux/contacts-reducer.js","redux/filter-reducer.js","redux/auth/auth-reducers.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","token","set","headers","common","unset","register","createAsyncThunk","credentials","a","rejectWithValue","post","response","console","log","data","status","alert","logIn","logOut","error","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","user","get","operations","getName","name","getIsLoggedIn","isLoggedIn","getRefreshing","isRefreshing","changeFilter","createAction","fetchContacts","addContacts","number","contact","replaceContacts","id","patch","deleteContacts","delete","module","exports","Loading","style","position","top","left","transform","zIndex","type","color","height","width","timeout","PrivateRoute","children","redirectTo","useSelector","to","PublicRoute","restricted","Home","lazy","Register","Login","Contacts","App","dispatch","useDispatch","refreshing","useEffect","fallback","path","element","contactReducer","createReducer","fulfilled","action","payload","filter","map","rejected","pending","filterReducer","userReducer","email","actions","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.88b3b0f4.chunk.js","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\n// const CLIENT_ID =\n//   '833112110572-4k4p2jgajs88vl35lvc5lr8svmkkb6m9.apps.googleusercontent.com';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\n///чтобы не  передаваnmd каждом запросе заголовок с токеном создаем объект токена\n//сетит  токен на хедеры\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common['Authorization'] = '';\n  },\n};\n\nconst register = createAsyncThunk(\n  'user/register',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const response = await axios.post('/users/signup', credentials);\n      console.log(response.data.token);\n\n      token.set(response.data.token);\n      return response.data;\n    } catch (error) {\n      console.log(error.response);\n      if (error.response.status === 400) {\n        alert('User creation error! Please try again!');\n      } else if (error.response.status === 500) {\n        alert('Server error! Please try again later!');\n      } else {\n        alert('Oops, something went wrong!');\n      }\n      return rejectWithValue(error);\n    }\n  },\n);\n\nconst logIn = createAsyncThunk(\n  'user/logIn',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/login', credentials);\n      console.log(token);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      alert('Invalid email or password! Please enter correct data!');\n      return rejectWithValue(error);\n    }\n  },\n);\n\nconst logOut = createAsyncThunk('user/logOut', async () => {\n  try {\n    axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    console.log(error);\n    alert('Something went wrong! Please try again!'); //обрабатывать ошибку\n  }\n});\n\n//// надо доставать токен  через  getState  из  локал  сторидж\n\nconst fetchCurrentUser = createAsyncThunk(\n  'user/fetchCurrentUser',\n  async (_, thunkAPI) => {\n    //получаем весь state\n    const state = thunkAPI.getState();\n    //из  него  токен, который сохранял персист  (если он есть)\n    const persistedToken = state.user.token;\n    // console.log(persistedToken);\n    //если токена нет  сохраненного то пользователя  нет , даем ошибку\n    if (persistedToken === null) {\n      console.log('Токена нет, уходим из fetchCurrentUser');\n      return thunkAPI.rejectWithValue();\n\n      //если оставить просто returт то он  возвращает undefined  и оно идет в payload и потом все падает\n\n      ///не совсем понятно (((\n    }\n    //   если  он есть в локал стор, то  сетим токен в заголовок  и отправляем запрос за данными юзера\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      console.log(error);\n      token.unset();\n      // alert('Your session has timed out. Please login again!');\n    }\n  },\n);\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","const getName = state => state.user.user.name;\n\nconst getIsLoggedIn = state => state.user.isLoggedIn;\nconst getToken = state => state.token;\nconst getRefreshing = state => state.user.isRefreshing;\n\nexport { getName, getIsLoggedIn, getToken, getRefreshing };\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\nexport const addContactsError = createAction(\"contacts/addContactsError\");\n\nexport const deleteContactsSuccess = createAction(\n  \"contacts/deleteContactsSuccess\"\n);\nexport const deleteContactsRequest = createAction(\n  \"contacts/deleteContactsRequest\"\n);\nexport const deleteContactsError = createAction(\"contacts/deleteContactsError\");\n\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const changeFilter = createAction(\"filter/change\");\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n// https://connections-api.herokuapp.com/users/signup\n\n// axios.defaults.baseURL = 'https://61b7b24c64e4a10017d18c66.mockapi.io';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContactsStatus',\n  async () => {\n    // const response = await axios.get(\"/contacts\");\n    // return response.data;\n    try {\n      const response = await axios.get('/contacts');\n      return response.data;\n    } catch (err) {\n      console.log(err);\n      //   return rejectWithValue(err.response.data);\n    }\n  },\n);\n\nexport const addContacts = createAsyncThunk(\n  'contacts/addContactsStatus',\n  async ({ name, number }, { rejectWithValue }) => {\n    const contact = { name, number };\n    try {\n      const response = await axios.post('/contacts', contact);\n      return response.data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  },\n);\n\nexport const replaceContacts = createAsyncThunk(\n  'contacts/replaceContactsStatus',\n  async ({ id, name, number }, { rejectWithValue }) => {\n    const contact = { name: name, number: number };\n    try {\n      const response = await axios.patch(`/contacts/${id}`, contact);\n      console.log(response);\n      return response.data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  },\n);\n\nexport const deleteContacts = createAsyncThunk(\n  'contacts/deleteContactsStatus',\n  async (id, { rejectWithValue }) => {\n    try {\n      ///axios не возвращает ничего  при удалении  delete\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (err) {\n      console.log(err.response.data);\n      return rejectWithValue(err.response.data);\n    }\n  },\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default function Loading() {\n  const style = {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    zIndex: '99',\n  };\n  return (\n    <div style={style}>\n      <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000} //3 secs\n      />\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\n\nconst PrivateRoute = ({ children, redirectTo = '/' }) => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return isLoggedIn ? children : <Navigate to={redirectTo} />;\n};\n\nexport default PrivateRoute;\n\n////вопрос   -  если  не использовать проп redirectTo  а прямо  в приватном компоненте\n//прописать  '/contacts'   по при рефреше  заржается на  старница контактов а   home ^ почему???/\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\n\nconst PublicRoute = ({ children, restricted = false, redirectTo = '/' }) => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const redirect = isLoggedIn && restricted;\n  return redirect ? <Navigate to={redirectTo} /> : children;\n};\n\nexport default PublicRoute;\n","import './App.module.css';\nimport React, { Suspense, lazy } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport Loading from './components/Loader/Loading';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport PublicRoute from './components/PublicRoute/PublicRoute';\nimport operations from './redux/auth/auth-operations';\nimport { getRefreshing } from './redux/auth/auth-selectors';\n\nconst Home = lazy(() =>\n  import('./views/Home/Home.js' /* webpackChunkName: \"Home\" */),\n);\nconst Register = lazy(() =>\n  import('./views/Register/Register.js' /* webpackChunkName: \"Register\" */),\n);\nconst Login = lazy(() =>\n  import('./views/Login/Login.js' /* webpackChunkName: \"Login\" */),\n);\nconst Contacts = lazy(() =>\n  import('./views/Contacts/Contacts.js' /* webpackChunkName: \"Contacts\" */),\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const refreshing = useSelector(getRefreshing);\n  console.log(refreshing);\n\n  ////при загрузке  приложения  запрашиваем  текущего пользователя\n  useEffect(() => {\n    dispatch(operations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    ///для  предотвращения  мигания страниц при перезагрузке страницы  -  пока загрузка  не рендерится,  когд получены данные польз  тогда рендер\n    <div>\n      {refreshing ? (\n        <Loading />\n      ) : (\n        <Suspense fallback={<Loading />}>\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <PublicRoute>\n                  <Home />\n                </PublicRoute>\n              }\n            />\n            <Route\n              path=\"register\"\n              element={\n                <PublicRoute restricted>\n                  <Register />\n                </PublicRoute>\n              }\n            />\n\n            <Route\n              path=\"login\"\n              element={\n                <PublicRoute restricted redirectTo=\"/contacts\">\n                  <Login />\n                </PublicRoute>\n              }\n            />\n\n            <Route\n              path=\"contacts\"\n              element={\n                <PrivateRoute redirectTo=\"/login\">\n                  <Contacts />\n                </PrivateRoute>\n              }\n            />\n          </Routes>\n        </Suspense>\n      )}\n    </div>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContacts,\n  addContacts,\n  deleteContacts,\n  replaceContacts,\n} from './operations';\n\nexport const contactReducer = createReducer([], {\n  [fetchContacts.fulfilled]: (state, action) => {\n    return action.payload;\n  },\n  [addContacts.fulfilled]: (state, action) => {\n    return [...state, action.payload];\n  },\n\n  [deleteContacts.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n\n  [replaceContacts.fulfilled]: (state, action) => {\n    return [...state].map(contact => {\n      console.log(action.payload);\n      if (contact.id === action.payload.id) {\n        return action.payload;\n      }\n      return contact;\n    });\n  },\n  //   console.log(action.payload);\n  //   console.log(state);\n  //   return action.payload;\n  // },\n});\n\nexport const ErrorReducer = createReducer(null, {\n  [addContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.pending]: () => null,\n  [deleteContacts.rejected]: (_, action) => action.payload,\n  [replaceContacts.rejected]: (state, action) => action.payload,\n});\n\nexport const loadingReducer = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContacts.pending]: () => true,\n  [addContacts.fulfilled]: () => false,\n  [addContacts.rejected]: () => false,\n  [deleteContacts.pending]: () => true,\n  [deleteContacts.fulfilled]: () => false,\n  [deleteContacts.rejected]: () => false,\n  [replaceContacts.pending]: () => true,\n  [replaceContacts.rejected]: () => false,\n  [replaceContacts.fulfilled]: () => false,\n});\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./actions\";\n\nexport const filterReducer = createReducer(\"\", {\n  [changeFilter]: (state, action) => {\n    // console.log(state);\n    console.log(action);\n    console.log(action.payload);\n    return action.payload;\n  },\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport operations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isRefreshing: false,\n};\n\nexport const userReducer = createReducer(initialState, {\n  [operations.register.fulfilled]: (state, action) => {\n    console.log(action.payload);\n    /////state  это  1  пользователь\n    state.user = action.payload.user;\n    state.token = action.payload.token;\n    state.isLoggedIn = true;\n  },\n  // [operations.register.rejected]: (state, action) => {\n\n  // }\n  [operations.logIn.fulfilled]: (state, action) => {\n    console.log(action.payload);\n    state.user = action.payload.user;\n    state.token = action.payload.token;\n    state.isLoggedIn = true;\n  },\n  [operations.logOut.fulfilled]: (state, action) => {\n    console.log(action.payload);\n    state.user = { name: null, email: null };\n    state.token = null;\n    state.isLoggedIn = false;\n\n    //delete token  and  clear  state\n  },\n  [operations.fetchCurrentUser.pending]: (state, actions) => {\n    state.isRefreshing = true;\n  },\n  [operations.fetchCurrentUser.fulfilled]: (state, actions) => {\n    console.log(actions.payload);\n    state.user = actions.payload;\n    state.isLoggedIn = true;\n    state.isRefreshing = false;\n  },\n  [operations.fetchCurrentUser.rejected]: (state, action) => {\n    state.isRefreshing = false;\n  },\n});\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactReducer } from './contacts-reducer';\nimport { filterReducer } from './filter-reducer';\nimport { userReducer } from './auth/auth-reducers';\n\n//для  сохранения токена  в  local  storage  чтобы  данные текущего польз  можно\n//было взять при перезагрузке страницы\n\n///это то что будем  сохранять\nconst authPersistConfig = {\n  key: 'authtoken',\n  storage,\n  whitelist: ['token'],\n};\n// const persistedUserRed = persistReducer(authPersistConfig, userReducer);\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n    filter: filterReducer,\n    user: persistReducer(authPersistConfig, userReducer),\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}