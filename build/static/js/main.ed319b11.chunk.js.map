{"version":3,"sources":["components/Loader/Loading.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/contacts/filter-reducer.js","redux/auth/auth-reducers.js","redux/store.js","index.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/contacts/actions.js","redux/contacts/operations.js","App.module.css"],"names":["Loading","style","position","top","left","transform","zIndex","type","color","height","width","timeout","PrivateRoute","children","redirectTo","useSelector","getIsLoggedIn","to","PublicRoute","restricted","Home","lazy","Register","Login","Contacts","App","dispatch","useDispatch","refreshing","getRefreshing","console","log","useEffect","operations","fetchCurrentUser","fallback","path","element","contactReducer","createReducer","fetchContacts","fulfilled","state","action","payload","addContacts","deleteContacts","filter","id","replaceContacts","map","contact","rejected","_","pending","filterReducer","changeFilter","userReducer","user","name","email","token","isLoggedIn","isRefreshing","register","logIn","logOut","actions","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","auth","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","axios","defaults","baseURL","set","headers","common","unset","createAsyncThunk","credentials","a","rejectWithValue","post","response","data","status","alert","error","thunkAPI","getState","persistedToken","get","getName","createAction","number","patch","delete","module","exports"],"mappings":"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","file":"static/js/main.ed319b11.chunk.js","sourcesContent":["import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default function Loading() {\n  const style = {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    zIndex: '99',\n  };\n  return (\n    <div style={style}>\n      <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000} //3 secs\n      />\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\n\nconst PrivateRoute = ({ children, redirectTo = '/' }) => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return isLoggedIn ? children : <Navigate to={redirectTo} />;\n};\n\nexport default PrivateRoute;\n\n////вопрос   -  если  не использовать проп redirectTo  а прямо  в приватном компоненте\n//прописать  '/contacts'   по при рефреше  заржается на  старница контактов а   home ^ почему???/\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\n\nconst PublicRoute = ({ children, restricted = false, redirectTo = '/' }) => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const redirect = isLoggedIn && restricted;\n  return redirect ? <Navigate to={redirectTo} /> : children;\n};\n\nexport default PublicRoute;\n","import './App.module.css';\nimport React, { Suspense, lazy } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport Loading from './components/Loader/Loading';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport PublicRoute from './components/PublicRoute/PublicRoute';\nimport operations from './redux/auth/auth-operations';\nimport { getRefreshing } from './redux/auth/auth-selectors';\n\nconst Home = lazy(() =>\n  import('./views/Home/Home.js' /* webpackChunkName: \"Home\" */),\n);\nconst Register = lazy(() =>\n  import('./views/Register/Register.js' /* webpackChunkName: \"Register\" */),\n);\nconst Login = lazy(() =>\n  import('./views/Login/Login.js' /* webpackChunkName: \"Login\" */),\n);\nconst Contacts = lazy(() =>\n  import('./views/Contacts/Contacts.js' /* webpackChunkName: \"Contacts\" */),\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const refreshing = useSelector(getRefreshing);\n  console.log(refreshing);\n\n  ////при загрузке  приложения  запрашиваем  текущего пользователя\n  useEffect(() => {\n    dispatch(operations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    ///для  предотвращения  мигания страниц при перезагрузке страницы  -  пока загрузка  не рендерится,  когд получены данные польз  тогда рендер\n    <div>\n      {refreshing ? (\n        <Loading />\n      ) : (\n        <Suspense fallback={<Loading />}>\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <PublicRoute>\n                  <Home />\n                </PublicRoute>\n              }\n            />\n            <Route\n              path=\"register\"\n              element={\n                <PublicRoute restricted>\n                  <Register />\n                </PublicRoute>\n              }\n            />\n\n            <Route\n              path=\"login\"\n              element={\n                <PublicRoute restricted redirectTo=\"/contacts\">\n                  <Login />\n                </PublicRoute>\n              }\n            />\n\n            <Route\n              path=\"contacts\"\n              element={\n                <PrivateRoute redirectTo=\"/login\">\n                  <Contacts />\n                </PrivateRoute>\n              }\n            />\n            <Route path=\"*\" element={<Navigate to={'/'} />} />\n          </Routes>\n        </Suspense>\n      )}\n    </div>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContacts,\n  addContacts,\n  deleteContacts,\n  replaceContacts,\n} from './operations';\n\nexport const contactReducer = createReducer([], {\n  [fetchContacts.fulfilled]: (state, action) => {\n    return action.payload;\n  },\n  [addContacts.fulfilled]: (state, action) => {\n    return [...state, action.payload];\n  },\n\n  [deleteContacts.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n\n  [replaceContacts.fulfilled]: (state, action) => {\n    return [...state].map(contact => {\n      console.log(action.payload);\n      if (contact.id === action.payload.id) {\n        return action.payload;\n      }\n      return contact;\n    });\n  },\n  //   console.log(action.payload);\n  //   console.log(state);\n  //   return action.payload;\n  // },\n});\n\nexport const ErrorReducer = createReducer(null, {\n  [addContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.pending]: () => null,\n  [deleteContacts.rejected]: (_, action) => action.payload,\n  [replaceContacts.rejected]: (state, action) => action.payload,\n});\n\nexport const loadingReducer = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContacts.pending]: () => true,\n  [addContacts.fulfilled]: () => false,\n  [addContacts.rejected]: () => false,\n  [deleteContacts.pending]: () => true,\n  [deleteContacts.fulfilled]: () => false,\n  [deleteContacts.rejected]: () => false,\n  [replaceContacts.pending]: () => true,\n  [replaceContacts.rejected]: () => false,\n  [replaceContacts.fulfilled]: () => false,\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport { changeFilter } from './actions';\n\nexport const filterReducer = createReducer('', {\n  [changeFilter]: (state, action) => {\n    // console.log(state);\n    console.log(action);\n    console.log(action.payload);\n    return action.payload;\n  },\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport operations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isRefreshing: false,\n};\n\nexport const userReducer = createReducer(initialState, {\n  [operations.register.fulfilled]: (state, action) => {\n    console.log(action.payload);\n    /////state  это  1  пользователь\n    state.user = action.payload.user;\n    state.token = action.payload.token;\n    state.isLoggedIn = true;\n  },\n  // [operations.register.rejected]: (state, action) => {\n\n  // }\n  [operations.logIn.fulfilled]: (state, action) => {\n    console.log(action.payload);\n    state.user = action.payload.user;\n    state.token = action.payload.token;\n    state.isLoggedIn = true;\n  },\n  [operations.logOut.fulfilled]: (state, action) => {\n    console.log(action.payload);\n    state.user = { name: null, email: null };\n    state.token = null;\n    state.isLoggedIn = false;\n\n    //delete token  and  clear  state\n  },\n  [operations.fetchCurrentUser.pending]: (state, actions) => {\n    state.isRefreshing = true;\n  },\n  [operations.fetchCurrentUser.fulfilled]: (state, actions) => {\n    console.log(actions.payload);\n    state.user = actions.payload;\n    state.isLoggedIn = true;\n    state.isRefreshing = false;\n  },\n  [operations.fetchCurrentUser.rejected]: (state, action) => {\n    state.isRefreshing = false;\n  },\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactReducer } from './contacts/contacts-reducer';\nimport { filterReducer } from './contacts/filter-reducer';\nimport { userReducer } from './auth/auth-reducers';\n\n//для  сохранения токена  в  local  storage  чтобы  данные текущего польз  можно\n//было взять при перезагрузке страницы\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n///это то что будем  сохранять\nconst authPersistConfig = {\n  key: 'authtoken',\n  storage,\n  whitelist: ['token'],\n};\n// const persistedUserRed = persistReducer(authPersistConfig, userReducer);\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n    filter: filterReducer,\n    auth: persistReducer(authPersistConfig, userReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\n// const CLIENT_ID =\n//   '833112110572-4k4p2jgajs88vl35lvc5lr8svmkkb6m9.apps.googleusercontent.com';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\n///чтобы не  передаваnmd каждом запросе заголовок с токеном создаем объект токена\n//сетит  токен на хедеры\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common['Authorization'] = '';\n  },\n};\n\nconst register = createAsyncThunk(\n  'user/register',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const response = await axios.post('/users/signup', credentials);\n      console.log(response.data.token);\n\n      token.set(response.data.token);\n      return response.data;\n    } catch (error) {\n      console.log(error.response);\n      if (error.response.status === 400) {\n        alert('User creation error! Please try again!');\n      } else if (error.response.status === 500) {\n        alert('Server error! Please try again later!');\n      } else {\n        alert('Oops, something went wrong!');\n      }\n      return rejectWithValue(error);\n    }\n  },\n);\n\nconst logIn = createAsyncThunk(\n  'user/logIn',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/login', credentials);\n      console.log(token);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      alert('Invalid email or password! Please enter correct data!');\n      return rejectWithValue(error);\n    }\n  },\n);\n\nconst logOut = createAsyncThunk('user/logOut', async () => {\n  try {\n    axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    console.log(error);\n    alert('Something went wrong! Please try again!'); //обрабатывать ошибку\n  }\n});\n\n//// надо доставать токен  через  getState  из  локал  сторидж\n\nconst fetchCurrentUser = createAsyncThunk(\n  'user/fetchCurrentUser',\n  async (_, thunkAPI) => {\n    //получаем весь state\n    const state = thunkAPI.getState();\n    //из  него  токен, который сохранял персист  (если он есть)\n    const persistedToken = state.auth.token;\n    console.log(persistedToken);\n    //если токена нет  сохраненного то пользователя  нет , даем ошибку\n    if (persistedToken === null) {\n      console.log('Токена нет, уходим из fetchCurrentUser');\n      return thunkAPI.rejectWithValue();\n    }\n    //если оставить просто returт то он  возвращает undefined  и оно идет в payload и потом все падает\n    ///не совсем понятно (((\n\n    //   если  он есть в локал стор, то  сетим токен в заголовок  и отправляем запрос за данными юзера\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      console.log(data);\n      return data;\n    } catch (error) {\n      console.log(error);\n      token.unset();\n      // alert('Your session has timed out. Please login again!');\n    }\n  },\n);\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","const getName = state => state.auth.user.name;\n\nconst getIsLoggedIn = state => state.auth.isLoggedIn;\nconst getToken = state => state.token;\nconst getRefreshing = state => state.auth.isRefreshing;\n\nexport { getName, getIsLoggedIn, getToken, getRefreshing };\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\nexport const addContactsError = createAction(\"contacts/addContactsError\");\n\nexport const deleteContactsSuccess = createAction(\n  \"contacts/deleteContactsSuccess\"\n);\nexport const deleteContactsRequest = createAction(\n  \"contacts/deleteContactsRequest\"\n);\nexport const deleteContactsError = createAction(\"contacts/deleteContactsError\");\n\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const changeFilter = createAction(\"filter/change\");\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContactsStatus',\n  async () => {\n    // const response = await axios.get(\"/contacts\");\n    // return response.data;\n    try {\n      const response = await axios.get('/contacts');\n      return response.data;\n    } catch (err) {\n      console.log(err);\n      //   return rejectWithValue(err.response.data);\n    }\n  },\n);\n\nexport const addContacts = createAsyncThunk(\n  'contacts/addContactsStatus',\n  async ({ name, number }, { rejectWithValue }) => {\n    const contact = { name, number };\n    try {\n      const response = await axios.post('/contacts', contact);\n      return response.data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  },\n);\n\nexport const replaceContacts = createAsyncThunk(\n  'contacts/replaceContactsStatus',\n  async ({ id, name, number }, { rejectWithValue }) => {\n    const contact = { name: name, number: number };\n    try {\n      const response = await axios.patch(`/contacts/${id}`, contact);\n      console.log(response);\n      return response.data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  },\n);\n\nexport const deleteContacts = createAsyncThunk(\n  'contacts/deleteContactsStatus',\n  async (id, { rejectWithValue }) => {\n    try {\n      ///axios не возвращает ничего  при удалении  delete\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (err) {\n      console.log(err.response.data);\n      return rejectWithValue(err.response.data);\n    }\n  },\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};"],"sourceRoot":""}