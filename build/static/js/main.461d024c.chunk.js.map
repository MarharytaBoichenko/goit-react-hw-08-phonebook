{"version":3,"sources":["components/ContactForm/ContactForm.module.css","views/Login/Login.module.css","views/Register/Register.module.css","App.module.css","redux/operations.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","redux/selectors.js","components/ContactList/ContactList.js","redux/actions.js","components/Filter/Filter.js","components/Heading/Heading.js","components/Container/Container.js","components/Navigation/Navigation.js","redux/auth/auth-selectors.js","components/MainNav/MainNav.js","redux/auth/auth-operations.js","components/UserMenu/userMenu.js","components/Header/Header.js","views/Contacts/Contacts.js","views/Login/Login.js","views/Register/Register.js","FreeVector-Phonebook.jpg","views/Home/Home.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","redux/contacts-reducer.js","redux/filter-reducer.js","redux/auth/auth-reducers.js","redux/store.js","index.js","components/Navigation/Navigation.module.css"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","response","data","console","log","addContacts","name","number","rejectWithValue","contact","post","replaceContacts","id","patch","deleteContacts","delete","ContactForm","useState","setName","setNumber","contacts","useSelector","state","dispatch","useDispatch","reset","onSubmit","e","preventDefault","nameInContact","toLowerCase","trim","isInContact","find","cont","idInContacts","filter","map","window","confirm","className","s","form","Typography","TextField","fullWidth","autoComplete","variant","required","type","value","onChange","target","size","margin","inputProps","pattern","title","Button","sx","width","ContactItem","ListItem","display","alignItems","ml","endIcon","onClick","deleteContact","getVisibleContacts","createSelector","normalizedFilter","toString","includes","ContactList","useEffect","visibleContacts","List","changeFilter","createAction","Filter","Box","component","Heading","text","mb","mt","ContainerBox","children","Container","padding","flexDirection","propTypes","PropTypes","node","Navigation","to","isActive","activeLink","link","getName","user","getIsLoggedIn","isLoggedIn","getRefreshing","isRefreshing","MainNav","token","set","headers","common","unset","register","credentials","status","alert","logIn","logOut","error","fetchCurrentUser","_","thunkAPI","getState","persistedToken","operations","UserMenu","mr","backgroundColor","color","Header","AppBar","position","Toolbar","justifyContent","IconButton","Contacts","Login","email","setEmail","password","setPassword","shownPassword","setShownPassword","maxWidth","textAlign","fontWeight","placeholder","InputProps","endAdornment","InputAdornment","onMouseDown","event","edge","VisibilityOff","Visibility","Register","Home","backgroundImage","Image","height","backgroundSize","backgroundPosition","borderRadius","PrivateRoute","redirectTo","PublicRoute","restricted","App","refreshing","path","element","contactReducer","createReducer","fulfilled","action","payload","filterReducer","rejected","pending","userReducer","actions","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.461d024c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\",\"nameInput\":\"ContactForm_nameInput__1yxA2\",\"inputLabel\":\"ContactForm_inputLabel__3ilUb\",\"label\":\"ContactForm_label__378f8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__RnYgG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Register_form__zmGtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n// https://connections-api.herokuapp.com/users/signup\n\n// axios.defaults.baseURL = 'https://61b7b24c64e4a10017d18c66.mockapi.io';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContactsStatus',\n  async () => {\n    // const response = await axios.get(\"/contacts\");\n    // return response.data;\n    try {\n      const response = await axios.get('/contacts');\n      return response.data;\n    } catch (err) {\n      console.log(err);\n      //   return rejectWithValue(err.response.data);\n    }\n  },\n);\n\nexport const addContacts = createAsyncThunk(\n  'contacts/addContactsStatus',\n  async ({ name, number }, { rejectWithValue }) => {\n    const contact = { name, number };\n    try {\n      const response = await axios.post('/contacts', contact);\n      return response.data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  },\n);\n\nexport const replaceContacts = createAsyncThunk(\n  'contacts/replaceContactsStatus',\n  async ({ id, name, number }, { rejectWithValue }) => {\n    const contact = { name: name, number: number };\n    try {\n      const response = await axios.patch(`/contacts/${id}`, contact);\n      console.log(response);\n      return response.data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  },\n);\n\nexport const deleteContacts = createAsyncThunk(\n  'contacts/deleteContactsStatus',\n  async (id, { rejectWithValue }) => {\n    try {\n      ///axios не возвращает ничего  при удалении  delete\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (err) {\n      console.log(err.response.data);\n      return rejectWithValue(err.response.data);\n    }\n  },\n);\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TextField, Button, Typography } from '@mui/material';\nimport { addContacts, replaceContacts } from '../../redux/operations';\n\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(state => {\n    return state.contacts;\n  });\n  const dispatch = useDispatch();\n\n  const nameHandler = e => {\n    setName(e.target.value);\n  };\n  const numberHandler = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    const nameInContact = name.toLowerCase().trim();\n    const isInContact = contacts.find(\n      cont => cont.name.toLowerCase().trim() === nameInContact,\n    );\n\n    ////наверно  костыли))\n\n    const idInContacts = contacts\n      .filter(cont => cont.name.toLowerCase().trim() === nameInContact)\n      .map(cont => cont.id);\n    console.log(idInContacts[0]);\n    const id = idInContacts[0];\n\n    if (isInContact) {\n      const needToReplace = window.confirm(\n        `${name} is already in contact,  do  you want to  replace ?`,\n      );\n      if (needToReplace) {\n        console.log('patch');\n        dispatch(replaceContacts({ id, name, number }));\n        reset();\n      }\n      return;\n    }\n    console.log('add');\n    dispatch(addContacts({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleOnSubmit} className={s.form}>\n      <Typography> Name</Typography>\n      <TextField\n        fullWidth\n        autoComplete=\"off\"\n        variant=\"outlined\"\n        required\n        type=\"name\"\n        value={name}\n        onChange={nameHandler}\n        size=\"small\"\n        margin=\"normal\"\n      />\n\n      <Typography> Number</Typography>\n      <TextField\n        fullWidth\n        autoComplete=\"off\"\n        variant=\"outlined\"\n        type=\"tel\"\n        value={number}\n        onChange={numberHandler}\n        inputProps={{\n          pattern: '[0-9] {10}',\n          title: 'Номер телефона должен состоять из 9 цифр',\n        }}\n        required\n        size=\"small\"\n        margin=\"normal\"\n      />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        size=\"small\"\n        sx={{ width: 130 }}\n      >\n        Add contact\n      </Button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport { ContactForm };\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Button, Typography, ListItem } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { deleteContacts } from '../../redux/operations';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const deleteContact = id => {\n    dispatch(deleteContacts(id));\n  };\n\n  return (\n    <ListItem sx={{ display: 'flex', alignItems: 'center' }}>\n      <Typography>{`${name}:`}</Typography>\n      <Typography sx={{ ml: '15px' }}>{number}</Typography>\n      <Button\n        endIcon={<DeleteIcon />}\n        onClick={() => {\n          deleteContact(id);\n        }}\n        variant=\"contained\"\n        size=\"small\"\n        sx={{ width: 90, ml: '15px' }}\n      >\n        Delete\n      </Button>\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\nexport { ContactItem };\n\n///\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts;\n\nexport const getFilter = state => state.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    // const filter = getFilter(state);\n    // const contacts = getContacts(state);\n    const normalizedFilter = filter.toLowerCase();\n    // console.log(contacts);\n    if (!contacts) {\n      return;\n    }\n    return contacts.filter(contact =>\n      contact.name.toString().toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { List } from '@mui/material';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleContacts } from '../../redux/selectors';\nimport { fetchContacts } from '../../redux/operations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const visibleContacts = useSelector(getVisibleContacts);\n\n  return (\n    <List sx={{ width: '350px' }}>\n      {visibleContacts.map(({ id, name, number }) => {\n        return <ContactItem key={id} name={name} number={number} id={id} />;\n      })}\n    </List>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteContact: PropTypes.func,\n};\nexport { ContactList };\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\nexport const addContactsError = createAction(\"contacts/addContactsError\");\n\nexport const deleteContactsSuccess = createAction(\n  \"contacts/deleteContactsSuccess\"\n);\nexport const deleteContactsRequest = createAction(\n  \"contacts/deleteContactsRequest\"\n);\nexport const deleteContactsError = createAction(\"contacts/deleteContactsError\");\n\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const changeFilter = createAction(\"filter/change\");\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { TextField, Typography, Box } from '@mui/material';\nimport { changeFilter } from '../../redux/actions';\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const filterHandler = e => {\n    console.log(e.target.value);\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <Box sx={{ width: '350px' }}>\n      <Typography variant=\"body1\" component=\"p\">\n        Find contacts by name\n      </Typography>\n      <TextField\n        variant=\"outlined\"\n        onChange={filterHandler}\n        type=\"text\"\n        name=\"filter\"\n        size=\"small\"\n        margin=\"dense\"\n        fullWidth\n      />\n    </Box>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport { Filter };\n","import { Typography } from '@mui/material';\n\nexport const Heading = ({ text }) => {\n  return (\n    <Typography variant=\"h4\" component=\"h2\" sx={{ mb: '5px', mt: '5px' }}>\n      {text}\n    </Typography>\n  );\n};\n","import { Container } from '@mui/material';\nimport PropTypes from 'prop-types';\nexport const ContainerBox = ({ children }) => {\n  return (\n    <Container\n      sx={{\n        padding: '30px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      {children}\n    </Container>\n  );\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n","import { NavLink } from 'react-router-dom';\nimport { Box } from '@mui/material';\nimport s from './Navigation.module.css';\n\nexport const Navigation = () => {\n  return (\n    <Box>\n      <NavLink\n        to=\"/register\"\n        className={({ isActive }) => (isActive ? s.activeLink : s.link)}\n      >\n        Register\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        className={({ isActive }) => (isActive ? s.activeLink : s.link)}\n      >\n        Login\n      </NavLink>\n    </Box>\n  );\n};\n","const getName = state => state.user.user.name;\n\nconst getIsLoggedIn = state => state.user.isLoggedIn;\nconst getToken = state => state.token;\nconst getRefreshing = state => state.user.isRefreshing;\n\nexport { getName, getIsLoggedIn, getToken, getRefreshing };\n","import { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\nimport { NavLink } from 'react-router-dom';\nimport s from './../Navigation/Navigation.module.css';\n\nexport const MainNav = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <>\n      <NavLink\n        to=\"/\"\n        className={({ isActive }) => (isActive ? s.activeLink : s.link)}\n      >\n        Home\n      </NavLink>\n      {isLoggedIn && (\n        <NavLink\n          to=\"/contacts\"\n          className={({ isActive }) => (isActive ? s.activeLink : s.link)}\n        >\n          Contacts\n        </NavLink>\n      )}\n    </>\n  );\n};\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n// import Alert from '@mui/material/Alert';\n// import AlertTitle from '@mui/material/AlertTitle';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\n///чтобы не  передаваnmd каждом запросе заголовок с токеном создаем объект токена\n//сетит  токен на хедеры\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common['Authorization'] = '';\n  },\n};\n\nconst register = createAsyncThunk(\n  'user/register',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const response = await axios.post('/users/signup', credentials);\n      console.log(response.data.token);\n\n      token.set(response.data.token);\n      return response.data;\n    } catch (error) {\n      console.log(error.response);\n      if (error.response.status === 400) {\n        alert('User creation error! Please try again!');\n      } else if (error.response.status === 500) {\n        alert('Server error! Please try again later!');\n      } else {\n        alert('Oops, something went wrong!');\n      }\n      return rejectWithValue(error);\n    }\n  },\n);\n\nconst logIn = createAsyncThunk(\n  'user/logIn',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/login', credentials);\n      console.log(token);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      alert('Invalid email or password! Please enter correct data!');\n      return rejectWithValue(error);\n    }\n  },\n);\n\nconst logOut = createAsyncThunk('user/logOut', async () => {\n  try {\n    axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    console.log(error);\n    alert('Something went wrong! Please try again!'); //обрабатывать ошибку\n  }\n});\n\n//// надо доставать токен  через  getState  из  локал  сторидж\n\nconst fetchCurrentUser = createAsyncThunk(\n  'user/fetchCurrentUser',\n  async (_, thunkAPI) => {\n    //получаем весь state\n    const state = thunkAPI.getState();\n    //из  него  токен, который сохранял персист  (если он есть)\n    const persistedToken = state.user.token;\n    // console.log(persistedToken);\n    //если токена нет  сохраненного то пользователя  нет , даем ошибку\n    if (persistedToken === null) {\n      console.log('Токена нет, уходим из fetchCurrentUser');\n      return thunkAPI.rejectWithValue();\n\n      //если оставить просто returт то он  возвращает undefined  и оно идет в payload и потом все падает\n\n      ///не совсем понятно (((\n    }\n    //   если  он есть в локал стор, то  сетим токен в заголовок  и отправляем запрос за данными юзера\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      token.unset();\n      alert('Your session has timed out. Please login again!');\n    }\n  },\n);\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Button, Typography, Box } from '@mui/material';\nimport { getName } from '../../redux/auth/auth-selectors';\nimport operations from '../../redux/auth/auth-operations';\n\nexport const UserMenu = () => {\n  const name = useSelector(getName);\n  const dispatch = useDispatch();\n\n  const logOutHandler = () => {\n    dispatch(operations.logOut());\n  };\n  return (\n    <Box component=\"section\" sx={{ display: 'flex', alignItems: 'center' }}>\n      <Typography sx={{ mr: '10px' }}>Welcome, {name}</Typography>\n      <Button\n        type=\"button\"\n        onClick={logOutHandler}\n        variant=\"contained\"\n        size=\"small\"\n        sx={{ width: 100, backgroundColor: 'white', color: '#1976d2' }}\n      >\n        LogOut\n      </Button>\n    </Box>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { AppBar, Toolbar, IconButton, Box } from '@mui/material';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport { NavLink } from 'react-router-dom';\nimport { Navigation } from '../Navigation/Navigation';\nimport { MainNav } from '../MainNav/MainNav';\nimport { UserMenu } from '../UserMenu/userMenu';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\nimport s from '../Navigation/Navigation.module.css';\n\nexport const Header = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <AppBar position=\"static\">\n      <Toolbar\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}\n      >\n        <Box>\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => (isActive ? s.activeLink : s.link)}\n          >\n            <IconButton>\n              <ContactPhoneIcon sx={{ color: 'white' }} />\n            </IconButton>\n          </NavLink>\n          <MainNav />\n        </Box>\n        {isLoggedIn ? <UserMenu /> : <Navigation />}\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { Heading } from '../../components/Heading/Heading';\nimport { ContainerBox } from '../../components/Container/Container';\n\n// import { UserMenu } from '../../components/User Menu/userMenu';\nimport { Header } from '../../components/Header/Header';\n\nexport const Contacts = () => {\n  return (\n    <>\n      <Header />\n      <ContainerBox>\n        <Heading text=\"Phonebook\" />\n        <ContactForm />\n        <Heading text=\"Contacts\" />\n        <Filter />\n        <ContactList />\n      </ContainerBox>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  TextField,\n  Button,\n  Container,\n  InputAdornment,\n  IconButton,\n  Typography,\n} from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport s from './Login.module.css';\nimport operations from '../../redux/auth/auth-operations';\nimport { Header } from '../../components/Header/Header';\n\nexport const Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [shownPassword, setShownPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const onEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const onPasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  const handleClickShowPassword = () => {\n    console.log(shownPassword);\n    setShownPassword(!shownPassword);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const onLoginSubmit = e => {\n    e.preventDefault();\n    console.log({ email, password });\n    dispatch(operations.logIn({ email, password }));\n    ///dispatch    email and password  to  LogIn  operation\n    reset();\n  };\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <Header />\n      <Container\n        maxWidth=\"sm\"\n        sx={{\n          padding: '30px',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          textAlign: 'center',\n        }}\n      >\n        <Typography variant=\"h4\" component=\"p\" fontWeight=\"500\">\n          Login into your account\n        </Typography>\n        <form onSubmit={onLoginSubmit} className={s.form}>\n          <TextField\n            // error={email === ''}\n            fullWidth\n            variant=\"outlined\"\n            required\n            type=\"email\"\n            value={email}\n            placeholder=\"Enter  your email\"\n            onChange={onEmailChange}\n            size=\"small\"\n            margin=\"normal\"\n          />\n\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            required\n            type={shownPassword ? 'text' : 'password'}\n            value={password}\n            // error={password === ''}\n            placeholder=\"Enter  your password\"\n            onChange={onPasswordChange}\n            size=\"small\"\n            margin=\"normal\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\"\n                  >\n                    {shownPassword ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n              pattern: '[0-9] {10}',\n              title: 'Пароль  должен состоять из 9 цифр',\n            }}\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            size=\"small\"\n            sx={{ width: 130 }}\n          >\n            LogIn\n          </Button>\n        </form>\n      </Container>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { TextField, Button, Container, Typography } from '@mui/material';\nimport s from './Register.module.css';\nimport operations from '../../redux/auth/auth-operations';\nimport { Header } from '../../components/Header/Header';\n\nexport const Register = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const onNameChange = e => {\n    setName(e.target.value);\n  };\n  const onEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const onPasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  const onRegisterHandler = e => {\n    e.preventDefault();\n    console.log({ name, email, password });\n    // const credentials = { name, email, password };\n    // dispatch(operations.register(credentials));\n    dispatch(operations.register({ name, email, password }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <Header />\n      <Container\n        maxWidth=\"sm\"\n        sx={{\n          padding: '30px',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          textAlign: 'center',\n        }}\n      >\n        <Typography variant=\"h4\" component=\"p\" fontWeight=\"500\">\n          Sign up to begin\n        </Typography>\n\n        <form onSubmit={onRegisterHandler} className={s.form}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            required\n            type=\"name\"\n            value={name}\n            placeholder=\"Enter  your name\"\n            onChange={onNameChange}\n            size=\"small\"\n            margin=\"normal\"\n          />\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            required\n            type=\"email\"\n            value={email}\n            placeholder=\"Enter  your email\"\n            onChange={onEmailChange}\n            size=\"small\"\n            margin=\"normal\"\n          />\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            required\n            type=\"text\"\n            value={password}\n            placeholder=\"Enter  your password\"\n            onChange={onPasswordChange}\n            size=\"small\"\n            margin=\"normal\"\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            size=\"small\"\n            sx={{ width: 130 }}\n          >\n            Register\n          </Button>\n          {/* <button type=\"submit\">Login with Google</button> */}\n        </form>\n      </Container>\n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/FreeVector-Phonebook.35df7fd2.jpg\";","import { Container, Typography, Box } from '@mui/material';\n\nimport { Header } from '../../components/Header/Header';\nimport Image from '../../FreeVector-Phonebook.jpg';\n\nexport const Home = () => {\n  return (\n    <>\n      <Header />\n      <Container\n        maxWidth=\"sm\"\n        sx={{\n          padding: '30px',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          textAlign: 'center',\n        }}\n      >\n        <Typography variant=\"h4\" sx={{ mt: '50px', fontWeight: '700' }}>\n          Hello, I`m phonebook to manage your contacts.\n        </Typography>\n        <Box\n          sx={{\n            backgroundImage: `url(${Image})`,\n            width: '500px',\n            height: '350px',\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            borderRadius: '5%',\n          }}\n        />\n      </Container>\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\n\nconst PrivateRoute = ({ children, redirectTo = '/' }) => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return isLoggedIn ? children : <Navigate to={redirectTo} />;\n};\n\nexport default PrivateRoute;\n\n////вопрос   -  если  не использовать проп redirectTo  а прямо  в приватном компоненте\n//прописать  '/contacts'   по при рефреше  заржается на  старница контактов а   home ^ почему???/\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\n\nconst PublicRoute = ({ children, restricted = false, redirectTo = '/' }) => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const redirect = isLoggedIn && restricted;\n  return redirect ? <Navigate to={redirectTo} /> : children;\n};\n\nexport default PublicRoute;\n","import './App.module.css';\nimport { Routes, Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n//сделать  lazy  загрузку\nimport { Contacts } from './views/Contacts/Contacts';\nimport { Login } from './views/Login/Login';\nimport { Register } from './views/Register/Register';\nimport { Home } from './views/Home/Home';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport PublicRoute from './components/PublicRoute/PublicRoute';\nimport operations from './redux/auth/auth-operations';\nimport { getRefreshing } from './redux/auth/auth-selectors';\n// import Counter from \"./Counter/counter\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const refreshing = useSelector(getRefreshing);\n  console.log(refreshing);\n\n  ////при загрузке  приложения  запрашиваем  текущего пользователя\n  useEffect(() => {\n    dispatch(operations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    ///для  предотвращения  мигания страниц при перезагрузке страницы  -  пока загрузка  не рендерится,  когд получены данные польз  тогда рендер\n\n    !refreshing && (\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <PublicRoute>\n              <Home />\n            </PublicRoute>\n          }\n        />\n        <Route\n          path=\"register\"\n          element={\n            <PublicRoute restricted>\n              <Register />\n            </PublicRoute>\n          }\n        />\n\n        <Route\n          path=\"login\"\n          element={\n            <PublicRoute restricted redirectTo=\"/contacts\">\n              <Login />\n            </PublicRoute>\n          }\n        />\n\n        <Route\n          path=\"contacts\"\n          element={\n            <PrivateRoute redirectTo=\"/login\">\n              <Contacts />\n            </PrivateRoute>\n          }\n        />\n      </Routes>\n    )\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContacts,\n  addContacts,\n  deleteContacts,\n  replaceContacts,\n} from './operations';\n\nexport const contactReducer = createReducer([], {\n  [fetchContacts.fulfilled]: (state, action) => {\n    return action.payload;\n  },\n  [addContacts.fulfilled]: (state, action) => {\n    return [...state, action.payload];\n  },\n\n  [deleteContacts.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n\n  [replaceContacts.fulfilled]: (state, action) => {\n    return [...state].map(contact => {\n      console.log(action.payload);\n      if (contact.id === action.payload.id) {\n        return action.payload;\n      }\n      return contact;\n    });\n  },\n  //   console.log(action.payload);\n  //   console.log(state);\n  //   return action.payload;\n  // },\n});\n\nexport const ErrorReducer = createReducer(null, {\n  [addContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.pending]: () => null,\n  [deleteContacts.rejected]: (_, action) => action.payload,\n  [replaceContacts.rejected]: (state, action) => action.payload,\n});\n\nexport const loadingReducer = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContacts.pending]: () => true,\n  [addContacts.fulfilled]: () => false,\n  [addContacts.rejected]: () => false,\n  [deleteContacts.pending]: () => true,\n  [deleteContacts.fulfilled]: () => false,\n  [deleteContacts.rejected]: () => false,\n  [replaceContacts.pending]: () => true,\n  [replaceContacts.rejected]: () => false,\n  [replaceContacts.fulfilled]: () => false,\n});\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./actions\";\n\nexport const filterReducer = createReducer(\"\", {\n  [changeFilter]: (state, action) => {\n    // console.log(state);\n    console.log(action);\n    console.log(action.payload);\n    return action.payload;\n  },\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport operations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isRefreshing: false,\n};\n\nexport const userReducer = createReducer(initialState, {\n  [operations.register.fulfilled]: (state, action) => {\n    console.log(action.payload);\n    /////state  это  1  пользователь\n    state.user = action.payload.user;\n    state.token = action.payload.token;\n    state.isLoggedIn = true;\n  },\n  // [operations.register.rejected]: (state, action) => {\n\n  // }\n  [operations.logIn.fulfilled]: (state, action) => {\n    console.log(action.payload);\n    state.user = action.payload.user;\n    state.token = action.payload.token;\n    state.isLoggedIn = true;\n  },\n  [operations.logOut.fulfilled]: (state, action) => {\n    console.log(action.payload);\n    state.user = { name: null, email: null };\n    state.token = null;\n    state.isLoggedIn = false;\n\n    //delete token  and  clear  state\n  },\n  [operations.fetchCurrentUser.pending]: (state, actions) => {\n    state.isRefreshing = true;\n  },\n  [operations.fetchCurrentUser.fulfilled]: (state, actions) => {\n    console.log(actions.payload);\n    state.user = actions.payload;\n    state.isLoggedIn = true;\n    state.isRefreshing = false;\n  },\n  [operations.fetchCurrentUser.rejected]: (state, action) => {\n    state.isRefreshing = false;\n  },\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactReducer } from './contacts-reducer';\nimport { filterReducer } from './filter-reducer';\nimport { userReducer } from './auth/auth-reducers';\n// console.log(userReducer);\n\nconst middleware = getDefaultMiddleware =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }).concat(logger);\n\n//для  сохранения токена  в  local  storage  чтобы  данные текущего польз  можно\n//было взять при перезагрузке страницы\n\n///это то что будем  сохранять\nconst authPersistConfig = {\n  key: 'authtoken',\n  storage,\n  whitelist: ['token'],\n};\n// const persistedUserRed = persistReducer(authPersistConfig, userReducer);\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n    filter: filterReducer,\n    user: persistReducer(authPersistConfig, userReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line\nexport default { store, persistor };\n// export default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeLink\":\"Navigation_activeLink__2rUFB\",\"link\":\"Navigation_link__12o2K\",\"navigation\":\"Navigation_navigation__1VtLy\"};"],"sourceRoot":""}