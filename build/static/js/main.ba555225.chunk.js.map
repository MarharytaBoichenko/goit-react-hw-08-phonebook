{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","App.module.css","redux/operations.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","redux/selectors.js","components/ContactList/ContactList.js","redux/actions.js","components/Filter/Filter.js","components/Heading/Heading.js","components/Container/Container.js","components/UserMenu/userMenu.js","views/Contacts/Contacts.js","views/Login/Login.js","views/Register/Register.js","components/Navigation/Navigation.js","views/Home/Home.js","App.js","redux/contacts-reducer.js","redux/filter-reducer.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","response","data","console","log","addContacts","name","number","rejectWithValue","contact","post","deleteContacts","id","delete","ContactForm","useState","setName","setNumber","contacts","useSelector","state","dispatch","useDispatch","reset","onSubmit","e","preventDefault","nameInContact","toLowerCase","trim","find","cont","alert","className","s","form","inputLabel","label","onChange","target","value","type","nameInput","required","pattern","title","button","ContactItem","contactItem","contactName","contactNumber","onClick","deleteContact","getContacts","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toString","includes","ContactList","useEffect","visibleContacts","list","map","item","changeFilter","createAction","Filter","filterInput","Heading","text","Container","children","container","UserMenu","Contacts","Login","placeholder","Register","Navigation","to","Home","App","path","element","contactReducer","createReducer","fulfilled","action","payload","filterReducer","rejected","_","pending","rootReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba555225.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\",\"nameInput\":\"ContactForm_nameInput__1yxA2\",\"inputLabel\":\"ContactForm_inputLabel__3ilUb\",\"label\":\"ContactForm_label__378f8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__5eHQm\",\"contactName\":\"ContactItem_contactName__3Zp2H\",\"contactNumber\":\"ContactItem_contactNumber__Lf19i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"inputLabel\":\"Filter_inputLabel__KDsXr\",\"filterInput\":\"Filter_filterInput__u16Kg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://61b7b24c64e4a10017d18c66.mockapi.io\";\n\nexport const fetchContacts = createAsyncThunk(\n  \"contacts/fetchContactsStatus\",\n  async () => {\n    // const response = await axios.get(\"/contacts\");\n    // return response.data;\n    try {\n      const response = await axios.get(\"/contacts\");\n      return response.data;\n    } catch (err) {\n      console.log(err);\n      //   return rejectWithValue(err.response.data);\n    }\n  }\n);\n\nexport const addContacts = createAsyncThunk(\n  \"contacts/addContactsStatus\",\n  async ({ name, number }, { rejectWithValue }) => {\n    const contact = { name, number };\n    try {\n      const response = await axios.post(\"/contacts\", contact);\n      return response.data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  }\n);\n\nexport const deleteContacts = createAsyncThunk(\n  \"contacts/deleteContactsStatus\",\n  async (id, { rejectWithValue }) => {\n    try {\n      ///axios не возвращает ничего  при удалении  delete\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (err) {\n      console.log(err.response.data);\n      return rejectWithValue(err.response.data);\n    }\n  }\n);\n","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContacts } from \"../../redux/operations\";\n\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contacts = useSelector((state) => {\n    return state.contacts;\n  });\n  const dispatch = useDispatch();\n\n  const nameHandler = (e) => {\n    setName(e.target.value);\n  };\n  const numberHandler = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    const nameInContact = name.toLowerCase().trim();\n    const isInContact = contacts.find(\n      (cont) => cont.name.toLowerCase().trim() === nameInContact\n    );\n    if (isInContact) {\n      alert(`${name} is already in contact`);\n      return;\n    }\n    dispatch(addContacts({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleOnSubmit} className={s.form}>\n      <label className={s.inputLabel}>\n        <span className={s.label}> Name</span>\n        <input\n          onChange={nameHandler}\n          type=\"name\"\n          // name=\"name\"\n          value={name}\n          className={s.nameInput}\n          required\n        ></input>\n      </label>\n      <label className={s.inputLabel}>\n        <span className={s.label}> Number</span>\n        <input\n          type=\"tel\"\n          // name=\"number\"\n          value={number}\n          onChange={numberHandler}\n          className={s.nameInput}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport { ContactForm };\n","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContacts } from \"../../redux/operations\";\nimport s from \"./ContactItem.module.css\";\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const deleteContact = (id) => {\n    dispatch(deleteContacts(id));\n  };\n\n  return (\n    <div className={s.contactItem}>\n      <p className={s.contactName}> {`${name}:`}</p>{\" \"}\n      <p className={s.contactNumber}> {number}</p>\n      <button\n        type=\"button\"\n        className={s.button}\n        onClick={() => {\n          deleteContact(id);\n        }}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\nexport { ContactItem };\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts;\nexport const getFilter = (state) => state.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    // const filter = getFilter(state);\n    // const contacts = getContacts(state);\n    const normalizedFilter = filter.toLowerCase();\n    console.log(contacts);\n    if (!contacts) {\n      return;\n    }\n    return contacts.filter((contact) =>\n      contact.name.toString().toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\n// const getVisibleContact = () => {\n//   const normalizedFilter = filter.toLowerCase();\n//   console.log(contacts);\n//   if (!contacts) {\n//     return;\n//   }\n//   return contacts.filter((contact) =>\n//     contact.name.toString().toLowerCase().includes(normalizedFilter)\n//   );\n// };\n\n// const visibleContacts = getVisibleContact();\n","import PropTypes from \"prop-types\";\nimport { useEffect } from \"react\";\nimport { ContactItem } from \"../ContactItem/ContactItem\";\nimport s from \"./ContactList.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getContacts,\n  getFilter,\n  getVisibleContacts,\n} from \"../../redux/selectors\";\nimport { fetchContacts } from \"../../redux/operations\";\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  console.log(contacts);\n  console.log(filter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const visibleContacts = useSelector(getVisibleContacts);\n  console.log(visibleContacts);\n\n  return (\n    <ul className={s.list}>\n      {visibleContacts.map(({ id, name, number }) => {\n        return (\n          <li key={id} className={s.item}>\n            <ContactItem name={name} number={number} id={id} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteContact: PropTypes.func,\n};\nexport { ContactList };\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\nexport const addContactsError = createAction(\"contacts/addContactsError\");\n\nexport const deleteContactsSuccess = createAction(\n  \"contacts/deleteContactsSuccess\"\n);\nexport const deleteContactsRequest = createAction(\n  \"contacts/deleteContactsRequest\"\n);\nexport const deleteContactsError = createAction(\"contacts/deleteContactsError\");\n\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const changeFilter = createAction(\"filter/change\");\n","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/actions\";\nimport s from \"./Filter.module.css\";\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const filterHandler = (e) => {\n    console.log(e.target.value);\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <>\n      <label className={s.inputLabel}>\n        <span className={s.label}>Find contacts by name</span>\n        <input\n          onChange={filterHandler}\n          type=\"text\"\n          name=\"filter\"\n          // value={value}\n          className={s.filterInput}\n        ></input>\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport { Filter };\n","export const Heading = ({ text }) => {\n  return <h2>{text}</h2>;\n};\n","import s from \"./Container.module.css\";\nimport PropTypes from \"prop-types\";\nexport const Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n","export const UserMenu = () => {\n  return (\n    <section>\n      <p>Welcome, email</p>\n      <button type=\"button\">LogOut</button>\n    </section>\n  );\n};\n","import { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { Heading } from '../../components/Heading/Heading';\nimport { Container } from '../../components/Container/Container';\nimport { UserMenu } from '../../components/UserMenu/userMenu';\n\nexport const Contacts = () => {\n  return (\n    <>\n      <Container>\n        <UserMenu />\n        <Heading text=\"Phonebook\" />\n        <ContactForm />\n        <Heading text=\"Contacts\" />\n        <Filter />\n        <ContactList />\n      </Container>\n    </>\n  );\n};\n","export const Login = () => {\n  return (\n    <form onSubmit>\n      <label>\n        <input\n          type=\"email\"\n          //   value\n          placeholder=\"Enter  your email\"\n          onChange\n        ></input>\n      </label>\n      <label>\n        <input\n          type=\"text\"\n          //   value\n          placeholder=\"Enter  your password\"\n          onChange\n        ></input>\n      </label>\n      <button type=\"submit\">LogIn</button>\n      <button type=\"submit\">Login with Google</button>\n    </form>\n  );\n};\n","export const Register = () => {\n  return (\n    <form onSubmit>\n      <label>\n        <input\n          type=\"email\"\n          //   value\n          placeholder=\"Enter  your email\"\n          onChange\n        ></input>\n      </label>\n      <label>\n        <input\n          type=\"text\"\n          //   value\n          placeholder=\"Enter  your password\"\n          onChange\n          pattern=\"/^[a-zA-Z0-9]+/\"\n          title=\"Пароль должен состоять из цифр и латинских букв верхнего и нижнего регистра\"\n        ></input>\n      </label>\n      <button type=\"submit\">Register</button>\n      <button type=\"submit\">Login with Google</button>\n    </form>\n  );\n};\n","import { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => {\n  return (\n    <>\n      <NavLink\n        to=\"/register\"\n        // className={({ isActive }) => (isActive ? s.activeLink : s.link)}\n      >\n        Register\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        // className={({ isActive }) => (isActive ? s.activeLink : s.link)}\n      >\n        Login\n      </NavLink>\n    </>\n  );\n};\n","import { Navigation } from '../../components/Navigation/Navigation';\nexport const Home = () => {\n  return (\n    <>\n      <div>Hello, I`m your phonebook</div>\n      <Navigation />\n    </>\n  );\n};\n","import './App.module.css';\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\n//сделать  lazy  загрузку\nimport { Contacts } from './views/Contacts/Contacts';\nimport { Login } from './views/Login/Login';\nimport { Register } from './views/Register/Register';\nimport { Home } from './views/Home/Home';\n// import Counter from \"./Counter/counter\";\n\nexport default function App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"register\" element={<Register />} />\n      <Route path=\"login\" element={<Login />} />\n      <Route path=\"contacts\" element={<Contacts />} />\n      {/* // <Container>\n          {/* // <Counter /> */}\n      {/* <Heading text=\"Phonebook\" /> */}\n      {/* <ContactForm /> */}\n      {/* <Heading text=\"Contacts\" /> */}\n      {/* <Filter /> */}\n      {/* <ContactList /> */}\n      {/* </Container> * / */}\n    </Routes>\n  );\n}\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { fetchContacts, addContacts, deleteContacts } from \"./operations\";\n\nexport const contactReducer = createReducer([], {\n  [fetchContacts.fulfilled]: (state, action) => {\n    console.log(action.payload);\n    return action.payload;\n  },\n  [addContacts.fulfilled]: (state, action) => {\n    console.log(action.payload);\n    return [...state, action.payload];\n  },\n\n  [deleteContacts.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport const ErrorReducer = createReducer(null, {\n  [addContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.pending]: () => null,\n  [deleteContacts.rejected]: (_, action) => action.payload,\n});\n\nexport const loadingReducer = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContacts.pending]: () => true,\n  [addContacts.fulfilled]: () => false,\n  [addContacts.rejected]: () => false,\n  [deleteContacts.pending]: () => true,\n  [deleteContacts.fulfilled]: () => false,\n  [deleteContacts.rejected]: () => false,\n});\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./actions\";\n\nexport const filterReducer = createReducer(\"\", {\n  [changeFilter]: (state, action) => {\n    // console.log(state);\n    console.log(action);\n    console.log(action.payload);\n    return action.payload;\n  },\n});\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport { contactReducer } from \"./contacts-reducer\";\nimport { filterReducer } from \"./filter-reducer\";\n\nconst middleware = (getDefaultMiddleware) =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }).concat(logger);\n\n//корневой reducer\nconst rootReducer = combineReducers({\n  contacts: contactReducer,\n  filter: filterReducer,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nconsole.log(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}